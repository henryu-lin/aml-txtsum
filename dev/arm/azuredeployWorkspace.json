{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspaceName": {
      "type": "string",
      "defaultValue": "TxtsumDev",
      "metadata": {
        "description": "Specifies the name of the Azure Machine Learning workspace."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Specifies the location for all resources."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[concat(uniqueString(parameters('workspaceName'), resourceGroup().id), 'storage')]",
      "metadata": {
        "description": "The name of the storage account to be created and associated with the workspace."
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "[concat(uniqueString(parameters('workspaceName'), resourceGroup().id), 'keyvault')]",
      "metadata": {
        "description": "The name of the key vault to be created and associated with the workspace."
      }
    },
    "applicationInsightsName": {
      "type": "string",
      "defaultValue": "[concat(uniqueString(parameters('workspaceName'), resourceGroup().id), 'insights')]",
      "metadata": {
        "description": "The name of the application insights to be created and associated with the workspace."
      }
    },
    "containerRegistryName": {
      "type": "string",
      "defaultValue": "[concat(uniqueString(parameters('workspaceName'), resourceGroup().id), 'registry')]",
      "metadata": {
        "description": "The name of the container registry to be created and associated with the workspace."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2020-11-01-preview",
      "name": "[parameters('containerRegistryName')]",
      "location": "[parameters('location')]",
      "sku": {
          "name": "basic"
      },
      "properties": {
          "adminUserEnabled": true
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2019-09-01",
      "name": "[parameters('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "name": "standard",
          "family": "A"
        },
        "accessPolicies": []
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2018-05-01-preview",
      "name": "[parameters('applicationInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-02-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "encryption": {
          "services": {
            "blob": {
              "enabled": true
            },
            "file": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "type": "Microsoft.MachineLearningServices/workspaces",
      "apiVersion": "2021-04-01",
      "name": "[parameters('workspaceName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[parameters('storageAccountName')]",
        "[parameters('applicationInsightsName')]",
        "[parameters('keyVaultName')]",
        "[parameters('containerRegistryName')]"
      ],
      "identity": {
        "type": "systemAssigned"
      },
      "properties": {
        "friendlyName": "[parameters('workspaceName')]",
        "storageAccount": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "keyVault": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
        "applicationInsights": "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]",
        "containerRegistry": "[resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName'))]"
      }
    }
  ],
  "outputs": {
    "workspaceResource": {
      "type": "string",
      "value": "[parameters('workspaceName')]"
    }
  }
}
